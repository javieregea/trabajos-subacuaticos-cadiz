---
import { linkingStrategy } from '../data/linkingStrategy.js';

export interface Props {
  currentPage: string;
  type?: 'services' | 'locations' | 'contextual' | 'all';
  showTitle?: boolean;
  limit?: number;
  className?: string;
}

const { currentPage, type = 'all', showTitle = true, limit = 6, className = '' } = Astro.props;

// Get current page data
const pageData = linkingStrategy.services[currentPage] ||
                 linkingStrategy.locations[currentPage] ||
                 linkingStrategy.hubs[currentPage];

// Build links array based on type
let links = [];

if (pageData) {
  if (type === 'services' || type === 'all') {
    if (pageData.relatedServices) {
      links.push(...pageData.relatedServices.map(link => ({
        ...link,
        category: 'Servicios Relacionados',
        icon: '⚡'
      })));
    }
    if (pageData.allServices) {
      links.push(...pageData.allServices.map(link => ({
        ...link,
        category: 'Todos los Servicios',
        icon: '🔧'
      })));
    }
    if (pageData.primaryServices) {
      links.push(...pageData.primaryServices.map(link => ({
        ...link,
        category: 'Servicios Principales',
        icon: '🌟'
      })));
    }
  }

  if (type === 'locations' || type === 'all') {
    if (pageData.relatedLocations) {
      links.push(...pageData.relatedLocations.map(link => ({
        ...link,
        category: 'Ubicaciones',
        icon: '📍'
      })));
    }
    if (pageData.allLocations) {
      links.push(...pageData.allLocations.map(link => ({
        ...link,
        category: 'Todas las Ubicaciones',
        icon: '🗺️'
      })));
    }
    if (pageData.primaryLocations) {
      links.push(...pageData.primaryLocations.map(link => ({
        ...link,
        category: 'Ubicaciones Principales',
        icon: '🏛️'
      })));
    }
  }

  if (type === 'contextual' || type === 'all') {
    if (pageData.quickLinks) {
      links.push(...pageData.quickLinks.map(link => ({
        ...link,
        category: 'Enlaces Rápidos',
        icon: '⚡'
      })));
    }
  }
}

// Remove duplicates and limit results
const uniqueLinks = links
  .filter((link, index, self) =>
    index === self.findIndex(l => l.url === link.url)
  )
  .slice(0, limit);

// Group by category
const groupedLinks = uniqueLinks.reduce((acc, link) => {
  const category = link.category || 'Relacionados';
  if (!acc[category]) acc[category] = [];
  acc[category].push(link);
  return acc;
}, {});
---

{Object.keys(groupedLinks).length > 0 && (
  <div class={`related-links ${className}`}>
    {showTitle && (
      <h3 class="text-xl font-bold text-gray-800 mb-4 border-b-2 border-blue-200 pb-2">
        🔗 Enlaces Relacionados
      </h3>
    )}

    <div class="space-y-6">
      {Object.entries(groupedLinks).map(([category, categoryLinks]) => (
        <div key={category}>
          <h4 class="font-semibold text-gray-700 mb-3 text-sm uppercase tracking-wide">
            {categoryLinks[0]?.icon} {category}
          </h4>

          <div class="grid md:grid-cols-2 gap-3">
            {categoryLinks.map((link) => (
              <a
                key={link.url}
                href={link.url}
                class="group bg-white border border-gray-200 rounded-lg p-4 hover:border-blue-300 hover:shadow-md transition-all duration-200 block"
              >
                <div class="flex items-start justify-between">
                  <div class="flex-1">
                    <h5 class="font-medium text-gray-900 group-hover:text-blue-600 transition-colors">
                      {link.title}
                    </h5>
                    {(link.description || link.reason) && (
                      <p class="text-sm text-gray-500 mt-1">
                        {link.description || link.reason}
                      </p>
                    )}
                    {link.priority && (
                      <span class={`inline-block text-xs px-2 py-1 rounded-full mt-2 ${
                        link.priority === 'high'
                          ? 'bg-red-100 text-red-700'
                          : 'bg-blue-100 text-blue-700'
                      }`}>
                        {link.priority === 'high' ? 'Prioritario' : 'Recomendado'}
                      </span>
                    )}
                  </div>

                  <svg
                    class="w-4 h-4 text-gray-400 group-hover:text-blue-500 transition-colors ml-2 mt-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                  </svg>
                </div>
              </a>
            ))}
          </div>
        </div>
      ))}
    </div>

    <!-- SEO Benefits Notice -->
    <div class="mt-6 p-3 bg-blue-50 border border-blue-200 rounded-lg">
      <p class="text-xs text-blue-600">
        💡 <strong>Navegación inteligente:</strong> Estos enlaces te ayudan a encontrar servicios complementarios y ubicaciones relacionadas para tus necesidades marítimas.
      </p>
    </div>
  </div>
)}

<style>
  .related-links {
    background: linear-gradient(145deg, #f8fafc 0%, #f1f5f9 100%);
    padding: 1.5rem;
    border-radius: 12px;
    border: 1px solid #e2e8f0;
  }

  .related-links a:hover {
    transform: translateY(-1px);
  }

  .related-links h3 {
    color: #1e40af;
  }

  .related-links h4 {
    color: #475569;
    font-size: 0.875rem;
  }
</style>